* {
    box-sizing: border-box
}

body {
    margin: 0px;
    font-family: sans-serif;
}

#hero-1 {
    background-image: url("../images/lizard.jpg");
    height: 100vh;
    background-size: cover;
    background-position: center center;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    margin-bottom: 100px;
}

#hero-1 h1 {
    font-size: 120px; 
    padding-left: 100px;
}

/*
    If we want our flexbox content to be stacked in 
    a column like "normal" HTML content, then we need
    to change the direction of our flexbox.

    (Remember how to do that?)

    However, changing the flex-direction also means
    that our main-axis and cross-axis change.
    Which means that justify-content and align-items
    no longer align in the same directions either.

    So, we need to make a couple more changes to
    our flexbox properties, as well as adding one 
    other property.
*/
#hero-2 {
    background-image: url("../images/lonely-ocean.jpg");
    height: 100vh;
    background-size: cover;
    background-position: center center;
    display: flex;

    /* 
        Here's what we're changing with regards 
        to flexbox:

    */
    flex-direction: column; /* new */
    justify-content: center; /* changed so it's now vertically centered */
    align-items: flex-end; /* changed so it's now horizontally right */

    /*
        And here's one other thing we're changing:
        adding padding.

        We could add padding or margin to each text
        element individually, but that's working
        harder, rather than smarter!
    */
    padding-right: 60px;
}

/*
    With that out of the way, now we can style
    our text elements (along with adding in some
    fake button styling for our CTA).
*/

#hero-2 h2 {
    font-size: 72px;
    margin-bottom: 36px;
}

#hero-2 h4 {
    font-size: 24px;
    margin: 0px;
}

#hero-2 a {
    font-size: 14px;
    display: inline-block;
    background-color: #333333;
    color: white;
    text-decoration: none;
    padding: 24px;
    margin-top: 36px;
}

/* 
    While we positioned out hero content in a
    different way, we still run into the same
    problem with our padding and margin: 

    we can't position our content well without
    going over 100px...

    ...which must mean there is still a better way!
*/