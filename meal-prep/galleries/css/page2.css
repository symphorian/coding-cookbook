* {
    box-sizing: border-box
}

body {
    margin: 0px;
    font-family: sans-serif;
}

#layout {
    max-width: 800px;
    margin: 48px auto;
    text-align: center;
}

/*
    Now, we'll add another gallery to the HTML,
    this time using portrait oriented images.

    (Jump to HTML to add them)

    Depending on your images though, having
    the images flush up against each other
    may or may not work aesthetically.

    If they don't (as is kind of the case with
    our galleries here), we can introduce some
    spaces between the grid cells.

    Normally, we would use something like margin
    or padding to handle that, but with CSS Grid
    (and Flexbox as well), we have another option:
    a new property called 'gap'.

    It works similar to margin/padding, but you
    add it on the container level, and it adds
    space between all items/children in that
    container.
*/
.basic-grid-gallery {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    gap: 24px; /* new */

    padding: 24px;
    border: 10px solid #333333;
}

.basic-grid-gallery img {
    width: 100%;
}

