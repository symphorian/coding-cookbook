
* {
    box-sizing: border-box;
}

body {
    margin: 0px;
    font-family: sans-serif; 
    background-color: #1f1f1f;
    color: #EEEEEE;
}

/*
    So, what is the problem with this grid,
    and why should we change it? Well, it's 
    actually the same problem we mentioned
    in the previous day's demo, and even
    earlier today:

    If the screen gets too wide, so does our
    content. We partially addressed that by
    limiting how wide the center column
    content can grow, but we still can have
    content on the far right and left,
    with large gaps inbetween them and the 
    center content.

    So instead, we're going to add gutters
    to our grid again, so that we can keep
    ALL of our content centered, with the
    same general style and layout.

    Unfortunately, if we want to go with this
    approach (and don't want to deviate too
    far from our current layout), we will 
    need to make our grid a bit more rigid
    in the content columns; although, we 
    were effectively already doing that by
    applying a max width to our central
    column content, so it's not a huge loss.

    As in the previous day's demo, we'll
    add fractional units on either side of 
    our current column widths, and add an
    absolute width for the middle one.

    (And while we're here we also might as
    well add a bit of extra top margin,
    to give the design a bit more breathing 
    room from the top edge)
*/

#grid-layout {
    display: grid;
    grid-template-columns: 1fr 200px 550px 200px 1fr;
    margin-top: 36px;
    /* 
        Of course, by doing that, we break our
        current grid layout! That's because we
        defined 5 columns, but we only have three
        in our HTML, and so they fill up the first
        three columns in our grid.

        To fix that, we need to rely on 
        grid-template-areas here in the container,
        as well as using grid-area on the columns.
        
        (grid-template-area rows can get kinda lengthy,
        especially when we have multiple rows, so I 
        often bump them down to the next line and
        indent them to keep things clean)
    */
    grid-template-areas: 
        ". left-sidebar main-area right-sidebar .";
}

#sidebar-column-1 h2,
#sidebar-column-2 h3 {
    border-bottom: 2px solid #AAAAAA;
    padding-bottom: 8px;
}

#sidebar-column-1 ul,
#sidebar-column-2 ul {
    list-style-type: none;
    padding: 0px;
}

#sidebar-column-1 ul li,
#sidebar-column-2 ul li {
    list-style-type: none;
    padding: 4px 0px;
}

#sidebar-column-1 ul a,
#sidebar-column-2 ul a {
    color: #EEEEEE;
    text-decoration: none;
}

/*
    Now we need to add the grid-area
    properties for each column.

    Here's the first, which should be given
    the area of left-sidebar.
*/
#sidebar-column-1 {
    margin-left: 24px;
    grid-area: left-sidebar; /* new */
}

/*
    Here's the second column, which should
    be given the grid-area of main-area.
*/
#primary-column {
    padding: 0px 36px;
    grid-area: main-area; /* new */
}  

#primary-column .inner-content {
    /* background-color: #343434;
    padding: 24px;
    border-radius: 24px; */
    max-width: 600px; 
    margin: 0px auto; 
}

/*
    Here's the final column, which should
    be given the grid-area of right-sidebar.
*/
#sidebar-column-2 {
    margin-right: 24px;
    grid-area: right-sidebar; /* new */
}

#sidebar-column-1 .inner-content,
#sidebar-column-2 .inner-content {
    background-color: #343434;
    padding: 24px;
    border-radius: 4px;
}

/*
    Now our grid is a little less flexible at
    smaller widths, but our content does stay
    close together regardless of screen width,
    which tends to be more important.

    (remember the Design Principle of Proximity?)

    That doesn't mean there's no way to improve
    our design at smaller widths...but it will
    require us to learn about media queries
    first, which we're a couple weeks away from.

    Before we wrap things up, there's a little
    CSS trick we can use to make our sidebar
    much more useful with longer content...
*/