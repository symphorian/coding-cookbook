* {
    box-sizing: border-box
}

body {
    margin: 0px;
    font-family: Arial, Helvetica, sans-serif;
}

#single-column {
    width: 90vw;
    max-width: 1200px;
    margin: 0px auto;
}

/*
    At this point, we have three cards with a 
    basic but decent design, but they are stacked
    on top of each other like regular block elements.

    This isn't very common for card layouts; usually
    we have cards side by side with each other
    (typically in groups of threes or twos).

    How can we get them side by side?

    With our good old friend flexbox!

    Here we make our .card-container into a flexbox
    and tell it to add space between the flex items 
    the gap property.
*/
#card-container {
    display: flex;
    gap: 36px;
}

/*
    That on its own is a pretty effective
    side by side content layout!

    And all we had to do was make sure that our
    cards were inside of a div container, and
    activated flexbox with display: flex; and
    adding a bit of space with the gap property.
*/

.card {
    border: 5px solid #cf9dfc;
    padding: 36px;
    text-align: center;
    margin: 36px 0px;
}

.card h3 {
    font-size: 36px;
    margin: 0px;
}

.card p {
    font-size: 24px;
    margin: 24px 0px 0px;
}
