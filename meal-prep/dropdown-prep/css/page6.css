* {
    box-sizing: border-box;
}

body {
    margin: 0px;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
}

#cards-container {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
}

.card {
    flex: 300px;
    border: 3px solid black;
    margin: 24px;
    padding: 24px;
    border-radius: 12px;
    text-align: center;
}

.card a {
    text-decoration: none;
    color: black;
    display: block;
    border: 3px solid black;
    padding: 12px;
    margin-top: 36px;
}

#card1:hover {
    background-color: lightcyan;
    box-shadow: 4px 4px 4px #00000033;
    transform: translateY(-4px);
}

#card1 {
    transition: 
        background-color 0.5s,
        box-shadow 0.5s,
        transform 0.5s;
}

#card2 a {
    transition: 
        background-color 0.5s,
        box-shadow 0.5s,
        transform 0.5s;
}

#card2:hover a {
    background-color: aquamarine;
    box-shadow: 4px 4px 4px #00000033;
    transform: translateY(-4px);
}

#card3 .card-content {
    transition:
        opacity 0.5s,
        visibility 0.5s;
}

#card3:hover .card-content {
    opacity: 0;
    visibility: hidden;
}

/*
    If we want content to fade in when
    we hover over #card4, then we first 
    need to make it hidden in its default
    state.

    That means we basically need to do the 
    opposite of what we did for card3: 
    
    first we'll hide the content, and then
    we'll make it appear when we hover 
    over the card.
*/

#card4 .card-content {
    opacity: 0;
    visibility: hidden;
    transition:
        opacity 0.5s,
        visibility 0.5s;
}

#card4:hover .card-content {
    opacity: 1;
    /*
        The opposite of the 'hidden' state
        with the visibility property is
        the 'visible' state.
    */
    visibility: visible;
}

/*
    And there we go; now we have content
    that appears when we hover over the 
    card.

    There's a bit more that we can do 
    though, to make this a bit more
    interesting...
*/