/* COMMON PAGE LAYOUT SETUP CSS - START *****************/
* {
    box-sizing: border-box;
}

body {
    margin: 0px;
    /* preferred copy font goes here */
    font-family: sans-serif; 
}
/* COMMON PAGE LAYOUT SETUP CSS - END ********************/

/*
    Here's another example of a more "traditional" news
    layout, but this time with uneven widths in the columns.
*/

body {
    background-color: #E0E0E0;
    color: #111111;
}

#three-columns {
    /*
        Same as before, we'll keep the 1fr units on the
        sides in order to keep our main content centered.

        However, we'll be using different widths for the
        columns in the middle to create a more
        asymmetrical layout, which can be used to draw
        attention to more primary content compared to
        secondary content.
    */
    display: grid;
    grid-template-columns: 1fr 400px 200px 200px 1fr;
    grid-template-areas: 
        ". column-area-1 column-area-2 column-area-3 .";
}

#column-1 {
    background-color: white;
    padding: 0px 12px;
    grid-area: column-area-1;
}

#column-2 {
    background-color: white;
    padding: 0px 12px;
    grid-area: column-area-2;
}

#column-3 {
    background-color: white;
    padding: 0px 12px;
    grid-area: column-area-3;
}

/*
    Remember, images will almost always need to be
    resized when placed into a web layout.

    In this case, we want the image to grow to fill the
    column it's in, but no further.

    So we set the width to 100%, meaning it will grow to
    100% of the width of its container, which is the 
    column it is in.
*/
#three-columns img {
    margin-top: 24px;
    width: 100%;
}

#three-columns h2,
#three-columns h3 {
    border-bottom: 2px solid #888888;
    padding-bottom: 4px;
    margin-bottom: 0px;
}

#three-columns p {
    margin-top: 12px;
}

